{"version":3,"sources":["avatar.jpg","components/SidebarChat.js","components/Sidebar.js","axios.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","className","Avatar","Sidebar","src","AvatarImg","IconButton","fontSize","placeholder","type","instance","axios","create","baseURL","Chat","messages","useState","input","setInput","sendmessage","e","a","preventDefault","post","message","name","timestamp","received","map","value","onChange","target","onClick","App","setMessages","useEffect","get","then","response","data","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d860cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.8c4db95b.jpg\";","import React from 'react'\nimport './SidebarChat.css'\nimport {Avatar} from '@material-ui/core'\n\nfunction SidebarChat() {\n    return (\n        <div className=\"sidebarChat\">\n            <Avatar />\n            <div className=\"sidebarChat_info\">\n                <h2>Room name</h2>\n                <p>This is the last message</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","import React from 'react'\nimport'./Sidebar.css'\nimport AvatarImg from '../avatar.jpg'\nimport SidebarChat from './SidebarChat'\nimport {Avatar, IconButton} from '@material-ui/core'\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\n\n\nfunction Sidebar() {\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar src={AvatarImg}/>\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon fontSize=\"small\"/>\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon fontSize=\"small\"/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon fontSize=\"small\" />\n                    </IconButton>\n                    \n                </div>\n            </div>\n\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n            </div>\n\n            <div className=\"sidebar_chats\">\n                <SidebarChat />\n                <SidebarChat />\n                <SidebarChat />\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:9000'\n})\n\nexport default instance","import React, {useState} from 'react'\nimport './Chat.css'\nimport {Avatar, IconButton } from '@material-ui/core'\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\nimport AttachFile from '@material-ui/icons/AttachFile'\nimport MoreVert from '@material-ui/icons/MoreVert'\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\nimport MicIcon from '@material-ui/icons/Mic'\nimport axios from '../axios'\n\nfunction Chat({messages}) {\n    const [input, setInput] = useState(\"\")\n\n    const sendmessage = async (e) => {\n        e.preventDefault()\n\n        await axios.post('messages/new', {\n            message: input,\n            name: \"DEMO APP\",\n            timestamp: \"Just now\",\n            received: false\n        })\n\n        setInput('')\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat_header\">\n                <Avatar />\n                <div className=\"chat_headerInfo\">\n                    <h3>Room name</h3>\n                    <p>Last seen at...</p>\n                </div>\n\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlined fontSize=\"small\"/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile fontSize=\"small\" />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert fontSize=\"small\" />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"chat_body\">\n                {messages.map((message) => (\n                    <p className={`chat_message ${message.received && \"chat_receiver\"}`}>\n                        <span className=\"chat_name\">{message.name}</span>\n                            {message.message}\n                        <span className=\"chat_timestamp\">\n                            {message.timestamp}\n                        </span>\n                    </p>\n                ))}\n            </div>\n            <div className=\"chat_footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"type a message\" type=\"text\" />\n                    <button onClick={sendmessage} type=\"submit\">Send a message</button>    \n                </form> \n                <MicIcon />\n            </div>    \n        </div>\n    )\n}\n\nexport default Chat\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Sidebar from './components/Sidebar'\nimport Chat from './components/Chat'\nimport Pusher from 'pusher-js'\nimport axios from './axios'\n\nfunction App() {\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    axios.get('/messages/sync')\n      .then(response => {\n        setMessages(response.data)\n      })\n  }, [])\n\n  useEffect(() => {\n    const pusher = new Pusher('fb9db5d7f04ba1840d74', {\n      cluster: 'eu'\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage) => {\n      setMessages([...messages, newMessage])\n    });\n    \n    return () => {\n      channel.unbind_all()\n      channel.unsubscribe()\n    }\n  }, [messages])\n\n  console.log(messages)\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        <Sidebar />\n        <Chat \n          messages={messages}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}